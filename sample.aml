;  AML
;  Author: Alexander Myasnikov
;  mailto:myasnikov.alexander.s@gmail.com
;  git:https://gitlab.com/amyasnikov/aml
;  version: 0.1



; (func product
;   (if
;     (call
;       (var greater)
;       (arg 1)
;       (int 1))
;     (call
;       (var mult)
;       (arg 1)
;       (call
;         (var product)
;         (call
;           (var sub)
;           (arg 1)
;           (int 1))))
;     (int 1)))

; (block
;   (defvar a (int 1))
;   (defvar b (int 2))
;   (defvar c (call sum a b))
;   (call print (var a))
;   (call print (var b))
;   (call print (var c)))

; (func test_1
;   (block
;     (set a (block (set aa (var a)) (int 1)))
;     (set b (block (set aa (var a)) (int 1)))
;     (set c (block (set aa (var c)) (int 1)))
;     (set aa (var a))
;     (set bb (var bb))
;     (int 1)))

; (func main
;   (block
;     (set a
;       (int 10))
;     (set b
;       (int 3))
;     (set p
;       (call
;         (var perimeter)
;         (var a)
;         (var b)))
;     (call
;       (var print)
;       (var p))))

(defn sum
  (syscall
    (int 1)
    (arg 1)
    (arg 2)
    (arg 3)))

(defn mult
  (syscall
    (arg 1)
    (syscall (arg 1) (arg 1) (arg 1))
    (arg 2)))

(defn main
  (call
    (func mult)
    (call
      (func sum)
      (int 10)
      (int 11)
      (int 12))
    (call
      (func sum)
      (int 20)
      (int 21))))

(call
  (func main))



